<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASP.NETCoreWebAPIDemo</name>
    </assembly>
    <members>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.SUCCESS(System.Object,System.String)">
            <summary>
            返回成功封装
            </summary>
            <param name="data"></param>
            <param name="timeFormatStr"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.ToResponse(Infrastructure.Model.ApiResult,System.String)">
            <summary>
            json输出带时间格式的
            </summary>
            <param name="apiResult"></param>
            <param name="timeFormatStr"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.ExportExcel(System.String,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="path">完整文件路径</param>
            <param name="fileName">带扩展文件名</param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.ToJson(System.Int64)">
            <summary>
            响应返回结果
            </summary>
            <param name="rows">受影响行数</param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.GetApiResult(Infrastructure.CustomException.ResultCode,System.Object)">
            <summary>
            全局Code使用
            </summary>
            <param name="resultCode"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.ExportExcel``1(System.Collections.Generic.List{``0},System.String,System.String)">
            <summary>
            导出Excel
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="sheetName"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.ExportExcelMini(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            导出多个工作表(Sheet)
            </summary>
            <param name="sheets"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.BaseController.DownloadImportTemplate``1(System.Collections.Generic.List{``0},System.IO.Stream,System.String)">
            <summary>
            下载导入模板
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="stream"></param>
            <param name="fileName">下载文件名</param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.LoginController.Login(System.String,System.String,System.String,System.String)">
            <summary>
            登录
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.LoginController.CaptchaImage">
            <summary>
            生成图片验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Controllers.LoginController.GenerateCaptcha(System.String,System.String)">
            <summary>
            生成图片验证码
            </summary>
            <param name="captchaOff"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.DbExtension.FilterData(System.Int32)">
            <summary>
            数据过滤
            </summary>
            <param name="configId">多库id</param>
        </member>
        <member name="T:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension">
            <summary>
            HttpContext扩展类
            </summary>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            是否是ajax请求
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetClientUserIp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取客户端IP
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetUId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取登录用户id
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetName(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取登录用户名
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.IsAdmin(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是管理员
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetClaims(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            ClaimsIdentity
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取请求令牌
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.HttpContextExtension.GetRequestValue(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            设置请求参数
            </summary>
            <param name="operLog"></param>
            <param name="context"></param>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Extension.SwaggerExtension.UseSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:ASP.NETCoreWebAPIDemo.Filters.ActionPermissionFilter">
            <summary>
            API授权判断
            </summary>
        </member>
        <member name="P:ASP.NETCoreWebAPIDemo.Filters.ActionPermissionFilter.Permission">
            <summary>
            权限字符串，例如 system:user:view
            </summary>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Filters.ActionPermissionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            执行Action前校验是否有权限访问
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Filters.GlobalActionMonitor.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            Action请求前
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Filters.GlobalActionMonitor.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <summary>
            OnActionExecuted是在Action中的代码执行之后运行的方法。
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ASP.NETCoreWebAPIDemo.Filters.VerifyAttribute">
            <summary>
            授权校验访问
            如果跳过授权登录在Action 或controller加上 AllowAnonymousAttribute
            </summary>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Filters.VerifyAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            只判断token是否正确，不判断权限
            如果需要判断权限的在Action上加上ApiActionPermission属性标识权限类别，ActionPermissionFilter作权限处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.ValidParameters">
            <summary>
            验证Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.GenerateJwtToken(System.Collections.Generic.List{System.Security.Claims.Claim},Infrastructure.JwtSettings)">
            <summary>
            生成token
            </summary>
            <param name="claims"></param>
            <param name="jwtSettings"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.AddClaims(Model.System.LoginUser)">
             <summary>
            组装Claims
             </summary>
             <param name="user"></param>
             <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.GetLoginUser(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取用户身份信息
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.ParseToken(System.String)">
            <summary>
            从令牌中获取数据声明
            </summary>
            <param name="token">令牌</param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Framework.JwtUtil.ValidateJwtToken(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            jwt token校验
            </summary>
            <param name="jwtToken"></param>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Hubs.MessageHub.OnConnectedAsync">
            <summary>
            客户端连接的时候调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Hubs.MessageHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            连接终止时调用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ASP.NETCoreWebAPIDemo.Hubs.MessageHub.SendMessage(System.String,System.String,System.String)">
            <summary>
            注册信息
            </summary>
            <param name="connectId"></param>
            <param name="userName"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="P:ASP.NETCoreWebAPIDemo.Hubs.OnlineUsers.ConnnectionId">
            <summary>
            客户端连接Id
            </summary>
        </member>
        <member name="P:ASP.NETCoreWebAPIDemo.Hubs.OnlineUsers.Userid">
            <summary>
            用户id
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ASP.NETCoreWebAPIDemo.Middleware.GlobalExceptionMiddleware" -->
        <member name="M:ASP.NETCoreWebAPIDemo.Startup.InjectServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            注入Services服务
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
    </members>
</doc>
